/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.gnu.glpk;


/**
 * Wrapper class for pointer generated by SWIG.
 * <p>Please, refer to doc/glpk-java.pdf of the GLPK for Java distribution
 * and to doc/glpk.pdf of the GLPK source distribution
 * for details. You can download the GLPK source distribution from
 * <a href="ftp://ftp.gnu.org/gnu/glpk">ftp://ftp.gnu.org/gnu/glpk</a>.
 */
public class glp_arc {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected glp_arc(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(glp_arc obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        GLPKJNI.delete_glp_arc(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setTail(glp_vertex value) {
    GLPKJNI.glp_arc_tail_set(swigCPtr, glp_vertex.getCPtr(value), value);
  }

  public glp_vertex getTail() {
    long cPtr = GLPKJNI.glp_arc_tail_get(swigCPtr);
    return (cPtr == 0) ? null : new glp_vertex(cPtr, false);
  }

  public void setHead(glp_vertex value) {
    GLPKJNI.glp_arc_head_set(swigCPtr, glp_vertex.getCPtr(value), value);
  }

  public glp_vertex getHead() {
    long cPtr = GLPKJNI.glp_arc_head_get(swigCPtr);
    return (cPtr == 0) ? null : new glp_vertex(cPtr, false);
  }

  public void setData(SWIGTYPE_p_void value) {
    GLPKJNI.glp_arc_data_set(swigCPtr, SWIGTYPE_p_void.getCPtr(value));
  }

  public SWIGTYPE_p_void getData() {
    long cPtr = GLPKJNI.glp_arc_data_get(swigCPtr);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public void setTemp(SWIGTYPE_p_void value) {
    GLPKJNI.glp_arc_temp_set(swigCPtr, SWIGTYPE_p_void.getCPtr(value));
  }

  public SWIGTYPE_p_void getTemp() {
    long cPtr = GLPKJNI.glp_arc_temp_get(swigCPtr);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public void setT_prev(glp_arc value) {
    GLPKJNI.glp_arc_t_prev_set(swigCPtr, glp_arc.getCPtr(value), value);
  }

  public glp_arc getT_prev() {
    long cPtr = GLPKJNI.glp_arc_t_prev_get(swigCPtr);
    return (cPtr == 0) ? null : new glp_arc(cPtr, false);
  }

  public void setT_next(glp_arc value) {
    GLPKJNI.glp_arc_t_next_set(swigCPtr, glp_arc.getCPtr(value), value);
  }

  public glp_arc getT_next() {
    long cPtr = GLPKJNI.glp_arc_t_next_get(swigCPtr);
    return (cPtr == 0) ? null : new glp_arc(cPtr, false);
  }

  public void setH_prev(glp_arc value) {
    GLPKJNI.glp_arc_h_prev_set(swigCPtr, glp_arc.getCPtr(value), value);
  }

  public glp_arc getH_prev() {
    long cPtr = GLPKJNI.glp_arc_h_prev_get(swigCPtr);
    return (cPtr == 0) ? null : new glp_arc(cPtr, false);
  }

  public void setH_next(glp_arc value) {
    GLPKJNI.glp_arc_h_next_set(swigCPtr, glp_arc.getCPtr(value), value);
  }

  public glp_arc getH_next() {
    long cPtr = GLPKJNI.glp_arc_h_next_get(swigCPtr);
    return (cPtr == 0) ? null : new glp_arc(cPtr, false);
  }

  public glp_arc() {
    this(GLPKJNI.new_glp_arc(), true);
  }

}
